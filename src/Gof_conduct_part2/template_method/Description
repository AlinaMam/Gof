Паттерн Шаблонный метод необходим для определения скелета алгоритма, он перекладывает
ответственность за некоторые его шаги на подклассы.
Паттерн позволяет подклассам переопределять шаги алгоритма, не меняя его общей структуры.

Например, в работе нашего приложения мы заметили, что в административной его части администраторы
загружают документы в форматах DOC, PDF и CSV, а потом обрабатывают и записывают в БД.
В какой-то степени код всех трёх классов обработчиков схож. Все три обработчика берут данные из файлов.
В итоге хорошим решением будет убрать дублирующийся код в обработчиках.

Паттерн Шаблонный метод предлагает разбить наш алгоритм на последовательные шаги и описать каждый из них в отдельном методе,
вызывать их в шаблонном методе друг за другом. Благодаря этому наши подклассы теперь смогут переопределять шаги алгоритма,
оставляя его структуру без изменений и не трогая остальные шаги.

В нашем случае мы можем сделать общий шаблонный класс для всех трех алгоритмов. Он будет разбирать поступивший документ.
Это позволит подклассам переопределять некоторые шаги алгоритма, оставляя без изменений его структуру и остальные шаги,
которые для этого подкласса не так важны. Этот класс будет состоять из шаблонного метода, который последовательно вызывает
шаги разбора документов.

Обеспечивает повторное применение кода.
Определяет скелет алгоритма и перекладывает ответственность на отдельные шаги на подклассы.

