Заместитель
Можно вместо реальных объектов использовать объекты-заменители. Эти объекты являются посредником передачи вызова к оригинальному
объекту, позволяя сделать что-то до вызова, а что-то после.

Создается класс-дублер, имеющий тот же интерфейс, что и основной объект. И при получении запроса он делегировал бы всю
работу служебному объекту. В нашем случае заместитель выглядит как класс для работы с базой данных,
ускоряя работу за счет ленивой инициализации и кэширования запросов, которые повторяются.

1. DatabaseWorker (класс для работы с БД):
   - Реализует интерфейс Database, предоставляя базовую функциональность работы с базой данных.
   - Метод connect эмулирует подключение к базе данных и возвращает сообщение об успешном подключении.
   - Метод query эмулирует выполнение SQL-запроса и возвращает сообщение о количестве затронутых строк (в данном случае, всегда "0 row affected").

2. DatabaseCache (класс для кэширования):
   - Наследуется от DatabaseWorker и добавляет функциональность кэширования результатов подключения и выполнения запроса.
   - Содержит дополнительные поля: service (ссылка на объект DatabaseWorker), needReset (флаг, указывающий на необходимость сброса кэша), connectCache и queryCache (поля для хранения результатов).
   - При вызове методов connect и query проверяет, есть ли кэшированный результат, и возвращает его, если необходимо.

3. DatabaseManager (класс GUI, использующий сервисный объект):
   - Принимает в конструкторе объект типа DatabaseWorker (или его потомка) и использует его для выполнения подключения и запросов.
   - Методы makeConnection и runQuery делегируют вызов соответствующих методов объекту DatabaseWorker.

4. Метод main:
   - Создает объекты: DatabaseWorker, DatabaseCache (обертка вокруг DatabaseWorker с функциональностью кэширования), и DatabaseManager (принимает DatabaseCache в качестве сервиса).
   - Вызывает методы makeConnection и runQuery для демонстрации работы паттерна.

По итогу класс DatabaseCache действует как заместитель (прокси) для класса DatabaseWorker, добавляя функциональность кэширования результатов. Заместитель имеет тот же интерфейс, что и основной сервис, что позволяет использовать его вместо него, не затрагивая код клиента (DatabaseManager).